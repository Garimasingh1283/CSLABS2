#include <time.h>
#include <stdio.h>
#include <stdlib.h>


void merge(int arr[], int l, int m, int r)
{
	int i, j, k;
	int n1 = m - l + 1;
	int n2 = r - m;


	int L[n1], R[n2];


	for (i = 0; i < n1; i++)
		L[i] = arr[l + i];
	for (j = 0; j < n2; j++)
		R[j] = arr[m + 1 + j];


	i = 0;
	j = 0;
	k = l;
	while (i < n1 && j < n2) {
		if (L[i] <= R[j]) {
			arr[k] = L[i];
			i++;
		}
		else {
			arr[k] = R[j];
			j++;
		}
		k++;
	}


	while (i < n1) {
		arr[k] = L[i];
		i++;
		k++;
	}

	while (j < n2) {
		arr[k] = R[j];
		j++;
		k++;
	}
}


void mergeSort(int arr[], int l, int r)
{
	if (l < r) {
		int m = l + (r - l) / 2;

	
		mergeSort(arr, l, m);
		mergeSort(arr, m + 1, r);

		merge(arr, l, m, r);
	}
}

void printArray(int A[], int size)
{
	int i;
	for (i = 0; i < size; i++)
		printf("%d ", A[i]);
	printf("\n");
}


int main()
{
printf("MERGE SORT \n");
	int n;
	int arr1[1024];
	for (int i = 0 ;i < 1024;i++){
		arr1[i] = i+1;
		}

   clock_t s, e;
   double total;
   s = clock();
   
   mergeSort(arr1, 0, 1024 - 1);
   
   e = clock();
   total = (double)(e - s) / CLOCKS_PER_SEC;
   printf("Best case \n");
   printf("Total time taken by CPU: %f\n", total  );
   
   
   int arr2[1024];
   for (int i= 0 ;i < 1024;i++){
   	arr1[i] = 1024-i;
	}
clock_t s1, e1;
   double t;


   s1 = clock();
  mergeSort(arr2, 0, 1024 - 1);
   e1 = clock();
   t = (double)(e1 - s1) / CLOCKS_PER_SEC;
   printf("Worst  case \n");
   printf("Total time taken by CPU: %f\n", t  );
   
   
   
   
}

